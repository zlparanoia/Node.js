node.js 采用C++语言编写，是一个javascript的运行环境。
node.js 就是运行在服务器端的javascript 而不是过去的js只能在浏览器中运行。
node运行环境与浏览器运行环境的相同点：都可以运行js语句。
不同点：node没有全局变量window，浏览器有。node有自己的全局变量如process

node的特点
1、异步I/O，大多操作以异步方式进行调用。
2、事件与回调函数 
3、单线程
4、跨平台（linux、window）

创建Http服务器
var http = require('http');

http.createServer(function (request, response) {
  response.writeHead(200, {'Content-Type': 'text/plain'});
  response.end('Hello World\n');}).listen(8888);

console.log('Server running at http://127.0.0.1:8888/');
require node.js自带的http模块
调用http模块提供的函数：createServer。这个函数返回一个对象，这个对象有一个listen方法，这个方法有一个数值参数，指定这个http服务器监听的端口号。

node.js模块系统
1、创建模块
main.js
var hello = require("./hello");
hello.world();

hello.js
exports.world = function(){}; 

把对象封装到模块中：module.exports = function(){}

2、CommonJS规范
commonjs是服务器端模块的规范，node.js采用这种规范。CommonJS希望js能够在任何地方运行。

CommonJS模块规范
1.模块引用
require()
2.模块定义
exports.add = add; 导出当前模块的方法或者变量
3.模块标识
传递给require()方法的参数

Node.js函数
1.一个函数可以作为另一个函数接收的一个参数：
function say(word) {
     console.log(word);
}
function execute(someFunction, value) {
     someFunction(value);
}
execute(say, "hello");
2.匿名函数
function execute(someFunction, value) {
     someFunction(value);
}
execute(function(word){console.log(word);}, "hello");
